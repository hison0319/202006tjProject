<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member.mapper.MemberMapper">
	<insert id="insertMember" parameterType="member" keyProperty="id">
		insert into member(id,member_id,password,email,phone,address) 
		values(#{id},#{memberId},#{password},#{email},#{phone},#{address})
	</insert>
	<select id="selectMemberById" resultType="member">
		select id,member_id,password,email,phone,address,reg_date,certified from member where id=#{id}
	</select>
	<!-- BINARY -> 대소문자 구분 -->
	<select id="selectMemberByMemberId" resultType="member">
		select id,member_id,password,email,phone,address,reg_date,certified from member where BINARY(member_id)=#{memberId}
	</select>
	<select id="selectMemberByMemberIdPw" resultType="member">
		select id,member_id,password,certified from member
		 where BINARY(member_id)=#{memberId} AND BINARY(password)=#{password}
	</select>
	<!-- 카카오, 구글 로그인을 위한 쿼리문 -->
	<select id="selectMemberByMemberIdforApi" resultType="member">
	select id,member_id,password,email,phone,address,reg_date,certified from member where member_id like CONCAT('%', #{memberId})
	</select>
	<select id="selectMemberByEmail" resultType="String">
		select email from member where email=#{email}
	</select>
	<select id="selectMemberByPhone" resultType="String">
		select phone from member where phone=#{phone}
	</select>
	<select id="selectMemberAll" resultType="member">
		select id,member_id,password,email,phone,address,reg_date,certified from member
	</select>
	<update id="updateMember" parameterType="member">
		update member set member_id=#{memberId}, password=#{password}, email=#{email}, 
		phone=#{phone}, address=#{address} where id=#{id}
	</update>
	<update id="updateMemberCertify" parameterType="member">
		update member set certified=#{certified} where id=#{id}
	</update>
	<delete id="deleteMember">
		delete from member where id=#{id}
	</delete>
	<!-- 아이디, 패스워드 찾기 -->
	<select id="selectMemberIdByEmail" resultType="String">
		select member_id from member where email=#{email}
	</select>
	<select id="selectMemberInfoByIDEmail" resultType="member">
		select id,member_id,password,email,phone,address,reg_date,certified from member where member_id=#{memberId} AND email=#{email}
	</select>
</mapper>